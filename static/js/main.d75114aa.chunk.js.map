{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["shuffleArray","arr","i","length","j","Math","floor","random","timeScale","x","round","sleep","ms","Promise","resolve","setImmediate","setTimeout","App","props","drawDiff","i1","i2","state","isSorting","Error","context","canvasRef","current","getContext","clearColumn","drawColumn","drawAll","ctx","clearAll","clearRect","canvas","width","height","arrLength","columnNbr","startX","fillStyle","h","s","v","f","n","k","max","min","map","hex","toString","join","hsvToRgbHex","fillRect","startY","ctxHeight","idx","sort","a","setState","sortingAlgorithms","chosenSortAlg","console","log","bubbleSort","isSorted","drawAndSwap","swapTime","insertionSort","selectionSort","curJ","cocktailShakerSort","shouldSortReversed","stopSorting","swap","toggleDisplaySettings","areSettingsOpen","closeDisplaySettings","chooseSortAlg","event","target","value","changeColumnNbr","Array","keys","resetAndDraw","changeSwapTime","drawOnCanvas","isDrawing","rect","getBoundingClientRect","index","clientX","left","clientY","top","startDrawOnCanvas","endDrawOnCanvas","React","createRef","this","parent","document","getElementById","offsetWidth","offsetHeight","className","position","variant","color","onClick","disableElevation","aria-label","edge","id","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","anchor","open","component","align","gutterBottom","name","onChange","Object","control","label","defaultValue","aria-labelledby","valueLabelDisplay","onChangeCommitted","step","scale","e","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d75114aa.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Slider from \"@material-ui/core/Slider\";\nimport \"./App.css\";\n\nconst swapTime = 0;\nconst initColumnNbr = 100;\n\nfunction shuffleArray(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n}\n\nconst timeScale = (x) => Math.round(2 ** x)-1\n\nconst sleep = (ms) => {\n  if (ms === 0) return new Promise((resolve) => setImmediate(resolve));\n\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nfunction hsvToRgbHex(h, s, v) {\n  let f = (n, k = (n + h / 60) % 6) =>\n    Math.round((v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)) * 255);\n\n  return (\n    \"#\" +\n    [f(5), f(3), f(1)]\n      .map((x) => {\n        const hex = x.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n      })\n      .join(\"\")\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    const arr = [...Array(initColumnNbr).keys()];\n    shuffleArray(arr);\n    this.state = {\n      arr,\n      isSorting: false,\n      areSettingsOpen: false,\n      chosenSortAlg: \"Insertion Sort\",\n      columnNbr: initColumnNbr,\n      swapTime: swapTime,\n      isDrawing: false\n    };\n    this.sortingAlgorithms = {\n        \"Insertion Sort\": this.insertionSort,\n        \"Selection Sort\": this.selectionSort,\n        \"Cocktail Shaker Sort\": this.cocktailShakerSort,\n        \"Bubble Sort\": this.bubbleSort,\n    };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    var parent = document.getElementById(\"canvas-wrapper\");\n\n    context.canvas.width = parent.offsetWidth;\n    context.canvas.height = parent.offsetHeight;\n\n    this.drawAll(context, this.state.arr);\n  }\n\n  drawDiff = (arr, i1, i2) => {\n    if (!this.state.isSorting) throw Error(\"We should not be sorting!\")\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    this.clearColumn(context, i1);\n    this.drawColumn(context, arr, i1, i2);\n  };\n\n  drawAll = (ctx, arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      this.drawColumn(ctx, arr, i, i);\n    }\n  };\n\n  clearAll = (ctx) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  drawColumn = (ctx, arr, i1, i2) => {\n    const arrLength = arr.length;\n    const width = ctx.canvas.width / this.state.columnNbr;\n    const height = (ctx.canvas.height / this.state.columnNbr) * (arr[i2] + 1);\n    const startX = width * i1;\n\n    ctx.fillStyle = hsvToRgbHex((360 * arr[i2]) / arrLength, 1, 1);\n    this.fillRect(ctx, startX, 0, width, height);\n  };\n\n  fillRect = (ctx, startX, startY, width, height) => {\n    const ctxHeight = ctx.canvas.height;\n    ctx.fillRect(\n      startX,\n      Math.floor(ctxHeight) - Math.floor(startY) - Math.floor(height),\n      Math.floor(width),\n      Math.floor(height)\n    );\n  };\n\n  clearColumn = (ctx, idx) => {\n    const width = ctx.canvas.width / this.state.columnNbr;\n    const startX = width * idx;\n\n    this.clearRect(ctx, startX, width);\n  };\n\n  clearRect = (ctx, startX, width) => {\n    const ctxHeight = ctx.canvas.height;\n    ctx.clearRect(startX - 1, 0, Math.floor(width) + 2, Math.floor(ctxHeight));\n  };\n\n  sort = async (arr) => {\n    if (this.state.isSorting) return;\n\n    this.setState({ isSorting: true }, async () => {\n        try {\n          await this.sortingAlgorithms[this.state.chosenSortAlg](arr);\n          this.setState({ arr, isSorting: false });\n        }\n        catch (e) {\n          console.log(\"Sorting interrupted!\")\n          this.setState({ arr, isSorting: false });\n        }\n      }\n    );\n  };\n\n  bubbleSort = async (arr) => {\n    var isSorted = false;\n    while (!isSorted) {\n      isSorted = true;\n      for (let i = 1; i < arr.length; i++) {\n        if (arr[i - 1] > arr[i]) {\n          this.drawAndSwap(arr, i - 1, i);\n          await sleep(this.state.swapTime);\n          isSorted = false;\n        }\n      }\n    }\n  };\n\n  // Bad implementation O(N^3)???\n  insertionSort = async (arr) => {\n    var isSorted = false;\n    while (!isSorted) {\n      isSorted = true;\n      for (let i = 1; i < arr.length; i++) {\n        if (arr[i - 1] > arr[i]) {\n          this.drawAndSwap(arr, i - 1, i);\n          await sleep(this.state.swapTime);\n          isSorted = false;\n          break;\n        }\n      }\n    }\n  };\n\n  selectionSort = async (arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      var curJ = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[j] < arr[curJ]) {\n          curJ = j;\n        }\n      }\n      if (curJ !== i) {\n        this.drawAndSwap(arr, curJ, i);\n        await sleep(this.state.swapTime);\n      }\n    }\n  };\n\n  cocktailShakerSort = async (arr) => {\n    var isSorted = false;\n    var shouldSortReversed = false;\n    while (!isSorted) {\n      isSorted = true;\n      if (shouldSortReversed) {\n        for (let i = 1; i < arr.length; i++) {\n          if (arr[i - 1] > arr[i]) {\n            this.drawAndSwap(arr, i - 1, i);\n            await sleep(this.state.swapTime);\n            isSorted = false;\n          }\n        }\n      } else {\n        for (let i = arr.length - 1; i > 0; i--) {\n          if (arr[i - 1] > arr[i]) {\n            this.drawAndSwap(arr, i - 1, i);\n            await sleep(this.state.swapTime);\n            isSorted = false;\n          }\n        }\n      }\n      shouldSortReversed = !shouldSortReversed;\n    }\n  };\n\n  stopSorting = () => {\n    this.setState({ isSorting: false });\n  }\n\n  drawAndSwap = (arr, i1, i2) => {\n    this.drawDiff(arr, i1, i2);\n    this.drawDiff(arr, i2, i1);\n    this.swap(arr, i1, i2);\n  };\n\n  swap = (arr, i1, i2) => {\n    [arr[i1], arr[i2]] = [arr[i2], arr[i1]];\n  };\n\n  toggleDisplaySettings = () => {\n    this.setState({ areSettingsOpen: !this.state.areSettingsOpen });\n  };\n\n  closeDisplaySettings = () => {\n    this.setState({ areSettingsOpen: false });\n  };\n\n  chooseSortAlg = (event) => {\n    this.stopSorting()\n\n    this.setState({ chosenSortAlg: event.target.value });\n  };\n\n  changeColumnNbr = (event, value) => {\n    this.stopSorting()\n\n    this.setState({ columnNbr: value, arr: [...Array(value).keys()] }, () => this.resetAndDraw());\n  }\n\n  changeSwapTime = (event, value) => {\n    this.setState({ swapTime: value });\n  }\n\n  resetAndDraw = () => {\n    this.stopSorting()\n\n    //const arr = [...Array(this.state.columnNbr).keys()];\n    const arr = this.state.arr\n    shuffleArray(arr);\n    this.setState({ arr })\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    this.clearAll(context)\n    this.drawAll(context, arr)\n  }\n\n\n  drawOnCanvas = async (event) => {\n    if (!this.state.isDrawing) return\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n\n    const index = Math.round((event.clientX - rect.left)/canvas.width*this.state.columnNbr);\n    const height = Math.round((canvas.height - (event.clientY - rect.top))/canvas.height*this.state.columnNbr);\n\n    const arr = this.state.arr\n    arr[index] = height\n    this.clearColumn(context, index)\n    this.drawColumn(context, arr, index, index)\n    //this.setState({ arr })\n    //sleep(1)\n  }\n\n  startDrawOnCanvas = () => {\n    this.stopSorting()\n    this.setState({ isDrawing: true })\n  }\n\n  endDrawOnCanvas = () => {\n    this.setState({ isDrawing: false })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\" >\n          <AppBar position=\"relative\">\n            <Toolbar className=\"toolbar\">\n              <div className=\"toolbar-button-wrapper\">\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => this.sort(this.state.arr)} disableElevation>\n                  Sort\n                </Button>\n              </div>\n              <div className=\"toolbar-button-wrapper\">\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.resetAndDraw} disableElevation>\n                  Shuffle\n                </Button>\n              </div>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                className=\"open-drawer-button\"\n                onClick={this.toggleDisplaySettings}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n\n          <div className=\"canvas-wrapper\" id=\"canvas-wrapper\" onClick={this.closeDisplaySettings}>\n            <canvas\n              className=\"App-canvas\"\n              ref={this.canvasRef}\n              onMouseDown={this.startDrawOnCanvas}\n              onMouseMove={this.drawOnCanvas}\n              onMouseUp={this.endDrawOnCanvas}\n              onMouseLeave={this.endDrawOnCanvas}\n            />\n          </div>\n\n          <Drawer\n            variant=\"persistent\"\n            anchor=\"right\"\n            className=\"drawer\"\n            open={this.state.areSettingsOpen}\n          >\n            <div className=\"chevron-wrapper\">\n              <IconButton onClick={this.toggleDisplaySettings}>\n                <ChevronRightIcon />\n              </IconButton>\n            </div>\n            <div className=\"sortAlgChoice-wrapper\">\n              <FormControl component=\"fieldset\">\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Sorting Algorithm\n                </Typography>\n                <RadioGroup\n                  className=\"choiceGroup\"\n                  aria-label=\"choiceGroup\"\n                  name=\"choiceGroup\"\n                  value={this.state.chosenSortAlg}\n                  onChange={this.chooseSortAlg}\n                >\n                  {Object.keys(this.sortingAlgorithms).map((v) => (\n                    <FormControlLabel\n                      className=\"choice\"\n                      value={v}\n                      key={v}\n                      control={<Radio />}\n                      label={v}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <div>\n              <Typography\n                align=\"left\"\n                variant=\"h6\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                # Columns\n              </Typography>\n              <div className=\"col-slider\">\n                <Slider\n                  defaultValue={initColumnNbr}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  min={10}\n                  max={1000}\n                  onChangeCommitted={this.changeColumnNbr}\n                />\n              </div>\n            </div>\n            <div>\n              <Typography\n                align=\"left\"\n                variant=\"h6\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Time per swap (ms)\n              </Typography>\n              <div className=\"col-slider\">\n                <Slider\n                  defaultValue={swapTime}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  min={0}\n                  step={0.1}\n                  max={10}\n                  scale={(x) => timeScale(x)}\n                  onChangeCommitted={(e, value) => this.changeSwapTime(e, timeScale(value))}\n                />\n              </div>\n            </div>\n          </Drawer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}