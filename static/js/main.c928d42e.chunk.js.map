{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["shuffleArray","arr","i","length","j","Math","floor","random","timeScale","x","round","sleep","ms","Promise","resolve","setImmediate","setTimeout","App","props","drawDiff","i1","i2","state","isSorting","Error","context","canvasRef","current","getContext","clearColumn","drawColumn","drawAll","ctx","clearAll","clearRect","canvas","width","height","arrLength","columnNbr","startX","fillStyle","h","s","v","f","n","k","max","min","map","hex","toString","join","hsvToRgbHex","fillRect","startY","ctxHeight","idx","sort","a","setState","sortingAlgorithms","chosenSortAlg","console","log","bubbleSort","isSorted","drawAndSwap","swapTime","insertionSort","lsdRadixSort","base","buckets","Array","shift","index","push","bucket","selectionSort","curJ","cocktailShakerSort","shouldSortReversed","stopSorting","swap","toggleDisplaySettings","areSettingsOpen","closeDisplaySettings","chooseSortAlg","event","target","value","changeColumnNbr","keys","shuffleAndDraw","changeSwapTime","resetAndDraw","drawOnCanvas","isDrawing","rect","getBoundingClientRect","clientX","left","clientY","top","prevDrawIndex","prevDrawHeight","indexIncr","sign","curHeight","abs","startDrawOnCanvas","canDraw","endDrawOnCanvas","toggleCanDraw","React","createRef","this","parent","document","getElementById","offsetWidth","offsetHeight","className","position","variant","color","onClick","disableElevation","control","checked","onChange","name","label","aria-label","edge","id","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","anchor","open","component","align","gutterBottom","Object","defaultValue","aria-labelledby","valueLabelDisplay","onChangeCommitted","step","scale","e","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c928d42e.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Switch from \"@material-ui/core/Switch\";\nimport \"./App.css\";\n\nconst swapTime = 0;\nconst initColumnNbr = 100;\n\nfunction shuffleArray(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n}\n\nconst timeScale = (x) => Math.round(2 ** x) - 1;\n\nconst sleep = (ms) => {\n  if (ms === 0) return new Promise((resolve) => setImmediate(resolve));\n\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nfunction hsvToRgbHex(h, s, v) {\n  let f = (n, k = (n + h / 60) % 6) =>\n    Math.round((v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)) * 255);\n\n  return (\n    \"#\" +\n    [f(5), f(3), f(1)]\n      .map((x) => {\n        const hex = x.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n      })\n      .join(\"\")\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    this.arr = [...Array(initColumnNbr).keys()];\n    shuffleArray(this.arr);\n    this.state = {\n      isSorting: false,\n      areSettingsOpen: false,\n      chosenSortAlg: \"Insertion Sort\",\n      columnNbr: initColumnNbr,\n      swapTime: swapTime,\n      isDrawing: false,\n      canDraw: false,\n    };\n    this.sortingAlgorithms = {\n      \"Insertion Sort\": this.insertionSort,\n      \"Selection Sort\": this.selectionSort,\n      \"Cocktail Shaker Sort\": this.cocktailShakerSort,\n      \"Bubble Sort\": this.bubbleSort,\n      \"Radix Sort (LSD)\": this.lsdRadixSort,\n    };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    var parent = document.getElementById(\"canvas-wrapper\");\n\n    context.canvas.width = parent.offsetWidth;\n    context.canvas.height = parent.offsetHeight;\n\n    this.drawAll(context, this.arr);\n  }\n\n  drawDiff = (arr, i1, i2) => {\n    if (!this.state.isSorting) throw Error(\"We should not be sorting!\");\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    this.clearColumn(context, i1);\n    this.drawColumn(context, arr, i1, i2);\n  };\n\n  drawAll = (ctx, arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      this.drawColumn(ctx, arr, i, i);\n    }\n  };\n\n  clearAll = (ctx) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  };\n\n  drawColumn = (ctx, arr, i1, i2) => {\n    const arrLength = arr.length;\n    const width = ctx.canvas.width / this.state.columnNbr;\n    const height = (ctx.canvas.height / this.state.columnNbr) * (arr[i2] + 1);\n    const startX = width * i1;\n\n    ctx.fillStyle = hsvToRgbHex((360 * arr[i2]) / arrLength, 1, 1);\n    this.fillRect(ctx, startX, 0, width, height);\n  };\n\n  fillRect = (ctx, startX, startY, width, height) => {\n    const ctxHeight = ctx.canvas.height;\n    ctx.fillRect(\n      startX,\n      Math.floor(ctxHeight) - Math.floor(startY) - Math.floor(height),\n      Math.floor(width),\n      Math.floor(height)\n    );\n  };\n\n  clearColumn = (ctx, idx) => {\n    const width = ctx.canvas.width / this.state.columnNbr;\n    const startX = width * idx;\n\n    this.clearRect(ctx, startX, width);\n  };\n\n  clearRect = (ctx, startX, width) => {\n    const ctxHeight = ctx.canvas.height;\n    ctx.clearRect(startX - 1, 0, Math.floor(width) + 2, Math.floor(ctxHeight));\n  };\n\n  sort = async (arr) => {\n    if (this.state.isSorting) return;\n\n    this.setState({ isSorting: true }, async () => {\n      try {\n        await this.sortingAlgorithms[this.state.chosenSortAlg](arr);\n        this.setState({ isSorting: false });\n      } catch (e) {\n        console.log(\"Sorting interrupted! Reason: \" + e);\n        this.setState({ isSorting: false });\n      }\n    });\n  };\n\n  bubbleSort = async (arr) => {\n    var isSorted = false;\n    while (!isSorted) {\n      isSorted = true;\n      for (let i = 1; i < arr.length; i++) {\n        if (arr[i - 1] > arr[i]) {\n          this.drawAndSwap(arr, i - 1, i);\n          await sleep(this.state.swapTime);\n          isSorted = false;\n        }\n      }\n    }\n  };\n\n  insertionSort = async (arr) => {\n    var isSorted = false;\n    while (!isSorted) {\n      isSorted = true;\n      for (let i = 1; i < arr.length; i++) {\n        if (arr[i - 1] > arr[i]) {\n          this.drawAndSwap(arr, i - 1, i);\n          await sleep(this.state.swapTime);\n          isSorted = false;\n          break;\n        }\n      }\n    }\n  };\n\n  lsdRadixSort = async (arr, base = 4) => {\n    const buckets = Array(base);\n    var shift = 0;\n    var isSorted = false;\n    while (!isSorted) {\n      isSorted = true;\n      for (let i = 0; i < base; i++) {\n        buckets[i] = [];\n      }\n      for (let a of arr) {\n        const index = (Math.floor(a / base ** shift)) % base;\n        buckets[index].push(a);\n      }\n      shift++;\n      var index = 0;\n      \n      for (let bucket of buckets) {\n        console.log(bucket)\n        for (let a of bucket) {\n          if (arr[index] !== a) {\n            isSorted = false;\n          }\n          arr[index] = a;\n          this.drawAndSwap(arr, index, index);\n          index++;\n          await sleep(this.state.swapTime);\n        }\n      }\n    }\n  };\n\n  selectionSort = async (arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      var curJ = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[j] < arr[curJ]) {\n          curJ = j;\n        }\n      }\n      if (curJ !== i) {\n        this.drawAndSwap(arr, curJ, i);\n        await sleep(this.state.swapTime);\n      }\n    }\n  };\n\n  cocktailShakerSort = async (arr) => {\n    var isSorted = false;\n    var shouldSortReversed = false;\n    while (!isSorted) {\n      isSorted = true;\n      if (shouldSortReversed) {\n        for (let i = 1; i < arr.length; i++) {\n          if (arr[i - 1] > arr[i]) {\n            this.drawAndSwap(arr, i - 1, i);\n            await sleep(this.state.swapTime);\n            isSorted = false;\n          }\n        }\n      } else {\n        for (let i = arr.length - 1; i > 0; i--) {\n          if (arr[i - 1] > arr[i]) {\n            this.drawAndSwap(arr, i - 1, i);\n            await sleep(this.state.swapTime);\n            isSorted = false;\n          }\n        }\n      }\n      shouldSortReversed = !shouldSortReversed;\n    }\n  };\n\n  stopSorting = () => {\n    this.setState({ isSorting: false });\n  };\n\n  drawAndSwap = (arr, i1, i2) => {\n    this.drawDiff(arr, i1, i2);\n    this.drawDiff(arr, i2, i1);\n    this.swap(arr, i1, i2);\n  };\n\n  swap = (arr, i1, i2) => {\n    [arr[i1], arr[i2]] = [arr[i2], arr[i1]];\n  };\n\n  toggleDisplaySettings = () => {\n    this.setState({ areSettingsOpen: !this.state.areSettingsOpen });\n  };\n\n  closeDisplaySettings = () => {\n    this.setState({ areSettingsOpen: false });\n  };\n\n  chooseSortAlg = (event) => {\n    this.stopSorting();\n\n    this.setState({ chosenSortAlg: event.target.value });\n  };\n\n  changeColumnNbr = (event, value) => {\n    this.stopSorting();\n\n    this.arr = [...Array(value).keys()];\n    this.setState({ columnNbr: value }, () => this.shuffleAndDraw());\n  };\n\n  changeSwapTime = (event, value) => {\n    this.setState({ swapTime: value });\n  };\n\n  resetAndDraw = () => {\n    this.arr = [...Array(this.state.columnNbr).keys()];\n    this.shuffleAndDraw();\n  };\n\n  shuffleAndDraw = () => {\n    this.stopSorting();\n\n    shuffleArray(this.arr);\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    this.clearAll(context);\n    this.drawAll(context, this.arr);\n  };\n\n  drawOnCanvas = (event) => {\n    if (!this.state.isDrawing) return;\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n\n    const index = Math.floor(\n      ((event.clientX - rect.left) / canvas.width) * this.state.columnNbr\n    );\n    const height = Math.floor(\n      ((canvas.height - (event.clientY - rect.top)) / canvas.height) *\n        this.state.columnNbr\n    );\n\n    if (this.prevDrawIndex && this.prevDrawHeight) {\n      const indexIncr = Math.sign(index - this.prevDrawIndex);\n      let curHeight = this.prevDrawHeight;\n      console.log(curHeight);\n      for (\n        let i = this.prevDrawIndex + indexIncr;\n        i !== index;\n        i += indexIncr\n      ) {\n        curHeight +=\n          (height - this.prevDrawHeight) / Math.abs(index - this.prevDrawIndex);\n        this.arr[i] = Math.round(curHeight);\n        this.clearColumn(context, i);\n        this.drawColumn(context, this.arr, i, i);\n      }\n    }\n\n    this.arr[index] = height;\n    this.clearColumn(context, index);\n    this.drawColumn(context, this.arr, index, index);\n    this.prevDrawIndex = index;\n    this.prevDrawHeight = height;\n  };\n\n  startDrawOnCanvas = () => {\n    if (!this.state.canDraw) return;\n\n    this.stopSorting();\n    this.setState({ isDrawing: true });\n  };\n\n  endDrawOnCanvas = () => {\n    this.prevDrawIndex = null;\n    this.prevDrawHeight = null;\n    this.setState({ isDrawing: false });\n  };\n\n  toggleCanDraw = () => {\n    this.setState({ canDraw: !this.state.canDraw });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <AppBar position=\"relative\">\n            <Toolbar className=\"toolbar\">\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => this.sort(this.arr)}\n                  disableElevation\n                >\n                  Sort\n                </Button>\n              </div>\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={this.shuffleAndDraw}\n                  disableElevation\n                >\n                  Shuffle\n                </Button>\n              </div>\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={this.resetAndDraw}\n                  disableElevation\n                >\n                  Reset\n                </Button>\n              </div>\n              <div>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.canDraw}\n                      onChange={this.toggleCanDraw}\n                      name=\"canDraw\"\n                    />\n                  }\n                  label=\"Draw Mode\"\n                />\n              </div>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                className=\"open-drawer-button\"\n                onClick={this.toggleDisplaySettings}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n\n          <div\n            className=\"canvas-wrapper\"\n            id=\"canvas-wrapper\"\n            onClick={this.closeDisplaySettings}\n          >\n            <canvas\n              className=\"App-canvas\"\n              ref={this.canvasRef}\n              onMouseDown={this.startDrawOnCanvas}\n              onMouseMove={this.drawOnCanvas}\n              onMouseUp={this.endDrawOnCanvas}\n              onMouseLeave={this.endDrawOnCanvas}\n            />\n          </div>\n\n          <Drawer\n            variant=\"persistent\"\n            anchor=\"right\"\n            className=\"drawer\"\n            open={this.state.areSettingsOpen}\n          >\n            <div className=\"chevron-wrapper\">\n              <IconButton onClick={this.toggleDisplaySettings}>\n                <ChevronRightIcon />\n              </IconButton>\n            </div>\n            <div className=\"sortAlgChoice-wrapper\">\n              <FormControl component=\"fieldset\">\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Sorting Algorithm\n                </Typography>\n                <RadioGroup\n                  className=\"choiceGroup\"\n                  aria-label=\"choiceGroup\"\n                  name=\"choiceGroup\"\n                  value={this.state.chosenSortAlg}\n                  onChange={this.chooseSortAlg}\n                >\n                  {Object.keys(this.sortingAlgorithms).map((v) => (\n                    <FormControlLabel\n                      className=\"choice\"\n                      value={v}\n                      key={v}\n                      control={<Radio />}\n                      label={v}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <div>\n              <Typography\n                align=\"left\"\n                variant=\"h6\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                # Columns\n              </Typography>\n              <div className=\"col-slider\">\n                <Slider\n                  defaultValue={initColumnNbr}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  min={10}\n                  max={1000}\n                  onChangeCommitted={this.changeColumnNbr}\n                />\n              </div>\n            </div>\n            <div>\n              <Typography\n                align=\"left\"\n                variant=\"h6\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Time per swap (ms)\n              </Typography>\n              <div className=\"col-slider\">\n                <Slider\n                  defaultValue={swapTime}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  min={0}\n                  step={0.1}\n                  max={10}\n                  scale={(x) => timeScale(x)}\n                  onChangeCommitted={(e, value) =>\n                    this.changeSwapTime(e, timeScale(value))\n                  }\n                />\n              </div>\n            </div>\n          </Drawer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}